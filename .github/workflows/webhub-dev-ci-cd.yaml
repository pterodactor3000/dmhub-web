on:
  push:
    branches: ['develop']

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Use Node.js 18
        uses: actions/setup-node@v1
        with:
          node-version: 18.x

      - name: Cache node modules
        uses: actions/cache@v3.0.11
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-
            ${{ runner.OS }}-

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build:dev

      - name: Verify contents
        run: ls -la

      - name: Use Node.js 16
        uses: actions/setup-node@v1
        with:
          node-version: 16.x

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v0
        with:
          project_id: ${{ secrets.GCP_PROJECT }}
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Deploy to App Engine
        uses: google-github-actions/deploy-appengine@v0.8.0
        with:
          # The GCP project ID. Overrides project ID set by credentials.
          project_id: hazel-delight-288708
          # The path to set the working directory. The deliverables will be referenced from this path.
          working_directory: dist
          # The yaml files for the services or configurations you want to deploy. If not given, defaults to app.yaml in the current directory. If that is not found, attempts to automatically generate necessary configuration files (such as app.yaml) in the current directory.
          deliverables: app-dev.yaml
          # Service account key to use for authentication. This should be the JSON formatted private key which can be exported from the Cloud Console. The value can be raw or base64-encoded.
          credentials: ${{ secrets.GCP_SA_KEY }}
